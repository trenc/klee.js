{
  "version": 3,
  "sources": ["../src/modules/constants.js", "../src/default.options.js", "../src/utils.js", "../src/modules/app.js", "../src/modules/userdata.js", "../src/modules/object3d.js", "../src/modules/scene.js", "../src/modules/controls.js", "../src/modules/loaders.js", "../src/modules/light.js", "../src/modules/material.js", "../src/modules/geometry.js", "../src/modules/item.js", "../src/modules/dragging.js", "../src/modules/events.js", "../src/modules/collisions.js", "../src/klee.js"],
  "sourcesContent": ["const KLEEVERSION = '0.11.0';\n\nexport { KLEEVERSION };\n", "function getDefaultOptions (THREE) {\n\treturn {\n\t\tdebugLevel: 0, // 0,1,2,3\n\t\tresponsive: true,\n\t\trenderer: {\n\t\t\ttype: 'WebGLRenderer',\n\t\t\targs: [{ antialias: true, preserveDrawingBuffer: true, alpha: true }],\n\t\t\tdomElement: 'body',\n\t\t\tclearColor: '#000000',\n\t\t\topacity: 1,\n\t\t\tproperties: {\n\t\t\t\t// outputEncoding: THREE.sRGBEncoding,\n\t\t\t\tshadowMap: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\ttype: THREE.PCFSoftShadowMap\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcamera: {\n\t\t\ttype: 'PerspectiveCamera',\n\t\t\tmethods: {\n\t\t\t\tlookAt: [0, 0, 0]\n\t\t\t},\n\t\t\tproperties: {\n\t\t\t\tposition: { x: -1, y: 2, z: 5 },\n\t\t\t\tname: 'camera-1',\n\t\t\t\tfov: 35,\n\t\t\t\taspect: window.innerWidth / window.innerHeight,\n\t\t\t\tnear: 1,\n\t\t\t\tfar: 300\n\t\t\t}\n\t\t},\n\t\tscene: {\n\t\t\ttype: 'Scene',\n\t\t\tproperties: {\n\t\t\t\tname: 'scene-1',\n\t\t\t\tposition: { x: 0, y: 0, z: 0 }\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport { getDefaultOptions };\n", "class Utils {\n\t// https://gist.github.com/ahtcx/0cd94e62691f539160b32ecda18af3d6\n\t// mutates target for read-only properties\n\tstatic merge (target, source) {\n\t\tif (!source || typeof source !== 'object') {\n\t\t\treturn target;\n\t\t}\n\n\t\tfor (const key of Object.keys(source)) {\n\t\t\tif (source[key] instanceof Object && typeof target[key] !== 'undefined') {\n\t\t\t\tObject.assign(source[key], this.merge(target[key], source[key]));\n\t\t\t}\n\t\t}\n\n\t\tObject.assign(target || {}, source);\n\n\t\treturn target;\n\t}\n\n\tstatic isThreeColorValue (string) {\n\t\tconst colorProperties = [\n\n\t\t\t'color',\n\t\t\t'specular',\n\t\t\t'emissive',\n\t\t\t'diffuse',\n\t\t\t'background',\n\t\t\t'sheen'\n\n\t\t];\n\n\t\treturn colorProperties.includes(string);\n\t}\n\n\tstatic applyMethods (object, methods) {\n\t\tmethods = methods || {};\n\n\t\tfor (const method in methods) {\n\t\t\tconst args = Array.isArray(methods[method]) ? methods[method] : [];\n\n\t\t\tif (!(method in object)) {\n\t\t\t\tconsole.log('Applied object has no method: ' + method);\n\t\t\t} else {\n\t\t\t\tobject[method](...args);\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n}\n\nexport { Utils };\n", "import { getDefaultOptions } from '../default.options';\nimport { Utils } from '../utils';\n\nconst App = (function () {\n\tlet options = {};\n\n\tlet THREE;\n\n\tconst local = {\n\n\t\tcanvas: null,\n\t\tcamera: null,\n\t\trenderer: null,\n\t\tscene: null,\n\t\tmouse: null,\n\t\traycaster: null,\n\t\tmanager: null,\n\t\tcontrols: {\n\t\t\tOrbitControls: null\n\t\t},\n\t\tmovingLimits: null,\n\t\tdraggables: [],\n\t\tdraggableObject: null,\n\t\tcollidables: [],\n\t\tfaceables: [],\n\t\tactions: {\n\t\t\tisDragging: false\n\t\t}\n\n\t};\n\n\tfunction init (three, initOptions = {}) {\n\t\tif (!three || !three.REVISION) {\n\t\t\terror('THREE is not inserted');\n\t\t}\n\n\t\tTHREE = { ...three };\n\n\t\tif (!initOptions || typeof initOptions !== 'object') {\n\t\t\tinitOptions = {};\n\t\t\twarn('Options are set to default values');\n\t\t}\n\n\t\tconst mergedOptions = Utils.merge(getDefaultOptions(THREE), initOptions);\n\n\t\toptions = { ...mergedOptions };\n\n\t\tlocal.renderer = initRenderer(options.renderer);\n\n\t\tlocal.manager = new THREE.LoadingManager();\n\t}\n\n\tfunction run (callback) {\n\t\tlocal.renderer.render(local.scene, local.camera);\n\n\t\tif (local.controls.OrbitControls) {\n\t\t\tif (local.controls.OrbitControls.enableDamping || local.controls.OrbitControls.autoRotate) {\n\t\t\t\tlocal.controls.OrbitControls.update();\n\t\t\t}\n\t\t}\n\n\t\tif (typeof callback === 'function') {\n\t\t\tcallback();\n\t\t}\n\n\t\trequestAnimationFrame(() => run(callback));\n\t}\n\n\tfunction initSize () {\n\t\tconst isResponsive = options.responsive || false;\n\t\tconst initialFov = local.camera.fov;\n\t\tconst initialWidth = local.canvas.clientWidth;\n\n\t\tlet width = local.canvas.clientWidth;\n\t\tlet height = local.canvas.clientHeight;\n\n\t\tlocal.renderer.setSize(width, height);\n\t\tlocal.camera.aspect = width / height;\n\t\tlocal.camera.updateProjectionMatrix();\n\n\t\tif (isResponsive === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst resizeObserver = new ResizeObserver((entry) => {\n\t\t\tconst wWidth = window.innerWidth;\n\n\t\t\twidth = local.canvas.clientWidth;\n\t\t\theight = local.canvas.clientHeight;\n\n\t\t\tif (wWidth !== width) {\n\t\t\t\tlocal.renderer.setSize(wWidth, height);\n\n\t\t\t\tlocal.camera.aspect = wWidth / height;\n\t\t\t\tlocal.camera.fov = initialFov * initialWidth / wWidth;\n\t\t\t\tlocal.camera.updateProjectionMatrix();\n\t\t\t}\n\t\t});\n\n\t\tresizeObserver.observe(document.querySelector('body'));\n\t}\n\n\tfunction initRenderer (o) {\n\t\tlocal.domElement = document.querySelector(o.domElement);\n\n\t\tif (local.domElement instanceof HTMLCanvasElement) {\n\t\t\to.args.canvas = local.domElement;\n\t\t\tlocal.canvas = local.domElement;\n\t\t}\n\n\t\tlet renderer = createObject(o);\n\n\t\trenderer = applyRendererOptions(renderer, o.properties);\n\n\t\trenderer.setClearColor(new THREE.Color(o.clearColor), o.opacity);\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\n\n\t\tif (!local.canvas) {\n\t\t\tlocal.domElement.appendChild(renderer.domElement);\n\t\t\tlocal.canvas = renderer.domElement;\n\t\t}\n\n\t\trenderer.setSize(local.canvas.clientWidth, local.canvas.clientHeight);\n\n\t\treturn renderer;\n\t}\n\n\tfunction createObject (o) {\n\t\tconst args = Array.isArray(o.args) ? o.args : [];\n\t\tconst object = new THREE[o.type](...args);\n\n\t\treturn object;\n\t}\n\n\tfunction applyRendererOptions (renderer, o) {\n\t\treturn Utils.merge(renderer, o);\n\t}\n\n\tfunction logMessage (message, type) {\n\t\t// be chatty if no proper options are set\n\t\tconst level = options.debugLevel !== undefined ? options.debugLevel : 3;\n\n\t\tswitch (type) {\n\t\t\tcase 'error':\n\n\t\t\t\tthrow message;\n\n\t\t\tcase 'warn':\n\n\t\t\t\tif (level > 0) {\n\t\t\t\t\tconsole.warn(message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'info':\n\n\t\t\t\tif (level > 2) {\n\t\t\t\t\tconsole.info(message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tif (level > 1) {\n\t\t\t\t\tconsole.log(message);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction error (message) {\n\t\tlogMessage(message, 'error');\n\t}\n\n\tfunction warn (message) {\n\t\tlogMessage(message, 'warn');\n\t}\n\n\tfunction log (message) {\n\t\tlogMessage(message, 'log');\n\t}\n\n\tfunction info (message) {\n\t\tlogMessage(message, 'info');\n\t}\n\n\treturn {\n\n\t\tget canvas () {\n\t\t\treturn local.canvas;\n\t\t},\n\n\t\tget options () {\n\t\t\treturn options;\n\t\t},\n\n\t\tget THREE () {\n\t\t\treturn THREE;\n\t\t},\n\n\t\tget scene () {\n\t\t\treturn local.scene;\n\t\t},\n\n\t\tset scene (object) {\n\t\t\tlocal.scene = object;\n\t\t},\n\n\t\tget camera () {\n\t\t\treturn local.camera;\n\t\t},\n\n\t\tset camera (object) {\n\t\t\tlocal.camera = object;\n\t\t},\n\n\t\tget controls () {\n\t\t\treturn local.controls;\n\t\t},\n\n\t\tget renderer () {\n\t\t\treturn local.renderer;\n\t\t},\n\n\t\tget manager () {\n\t\t\treturn local.manager;\n\t\t},\n\n\t\tget collidables () {\n\t\t\treturn local.collidables;\n\t\t},\n\n\t\tset collidables (collidables) {\n\t\t\tlocal.collidables = collidables;\n\t\t},\n\n\t\tget draggableObject () {\n\t\t\treturn local.draggableObject;\n\t\t},\n\n\t\tset draggableObject (object) {\n\t\t\tlocal.draggableObject = object;\n\t\t},\n\n\t\tget draggables () {\n\t\t\treturn local.draggables;\n\t\t},\n\n\t\tset draggables (draggables) {\n\t\t\tlocal.draggables = draggables;\n\t\t},\n\n\t\tget faceables () {\n\t\t\treturn local.faceables;\n\t\t},\n\n\t\tset faceables (faceables) {\n\t\t\tlocal.faceables = faceables;\n\t\t},\n\n\t\tget mouse () {\n\t\t\treturn local.mouse;\n\t\t},\n\n\t\tset mouse (mouseVector2) {\n\t\t\tlocal.mouse = mouseVector2;\n\t\t},\n\n\t\tget movingLimits () {\n\t\t\treturn local.movingLimits;\n\t\t},\n\n\t\tset movingLimits (minMaxLimits) {\n\t\t\tlocal.movingLimits = minMaxLimits;\n\t\t},\n\n\t\tget raycaster () {\n\t\t\treturn local.raycaster;\n\t\t},\n\n\t\tset raycaster (raycaster) {\n\t\t\tlocal.raycaster = raycaster;\n\t\t},\n\n\t\tget actions () {\n\t\t\treturn local.actions;\n\t\t},\n\n\t\tinitSize,\n\t\tcreate: createObject,\n\t\terror,\n\t\twarn,\n\t\tlog,\n\t\tinfo,\n\t\tinit,\n\t\trun\n\n\t};\n})();\n\nexport { App };\n", "import { App } from './app';\n\nconst UserData = (function () {\n\tfunction handle (object, userData) {\n\t\tconst f = {\n\t\t\tcollidable: (action) => addCollidables(object, action),\n\t\t\tdraggable: (action) => addDraggables(object, action),\n\t\t\tfaceable: (action) => addFaceable(object, action),\n\t\t\tmovingLimiter: (action) => setMovingLimits(object, action)\n\t\t};\n\n\t\tfor (const action in userData) {\n\t\t\tif (userData[action] && f[action]) {\n\t\t\t\tf[action](action);\n\t\t\t}\n\t\t}\n\n\t\tobject.userData = { ...object.userData, ...userData };\n\t}\n\n\tfunction setMovingLimits (object, action) {\n\t\tconst THREE = App.THREE;\n\t\tconst boundingBox = new THREE.Box3();\n\t\tboundingBox.setFromObject(object);\n\n\t\tApp.movingLimits = {\n\t\t\tmin: boundingBox.min,\n\t\t\tmax: boundingBox.max\n\t\t};\n\t}\n\n\tfunction addDraggables (object, action) {\n\t\tif (action) {\n\t\t\tApp.draggables.push(object);\n\t\t}\n\t}\n\n\tfunction addCollidables (object, action) {\n\t\tif (action) {\n\t\t\tApp.collidables.push(object);\n\t\t}\n\t}\n\n\tfunction addFaceable (object, action) {\n\t\tif (action) {\n\t\t\tApp.faceables.push(object);\n\t\t}\n\t}\n\n\treturn {\n\t\thandle\n\t};\n})(App);\n\nexport { UserData };\n", "import { App } from './app';\nimport { Utils } from '../utils';\nimport { UserData } from './userdata';\n\nconst Object3d = (function () {\n\tfunction add (options) {\n\t\tconst object3d = create(options);\n\n\t\tApp.scene.add(object3d);\n\n\t\treturn object3d;\n\t}\n\n\tfunction create (options) {\n\t\tconst THREE = App.THREE;\n\n\t\tconst args = Array.isArray(options.args) ? options.args : [];\n\t\tlet object = new THREE[options.type](...args);\n\n\t\tobject = change(object, options);\n\n\t\treturn object;\n\t}\n\n\tfunction change (object, options) {\n\t\tif (options.properties) {\n\t\t\tobject = applyProperties(object, options.properties);\n\t\t}\n\n\t\tif (options.methods) {\n\t\t\tobject = Utils.applyMethods(object, options.methods);\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tfunction applyProperties (object, options) {\n\t\tconst THREE = App.THREE;\n\n\t\tif (!options || typeof options !== 'object') {\n\t\t\treturn object;\n\t\t}\n\n\t\tfor (const prop in options) {\n\t\t\tif (options[prop] instanceof Object) {\n\t\t\t\t// prefer prototype \u00BBcopy\u00BB property before direct assignment\n\t\t\t\t// this handles non-writable object like Vectors, Euler, Quaternions etc.\n\t\t\t\tif (typeof object[prop] !== 'undefined' && 'copy' in object[prop]) {\n\t\t\t\t\t// a workaround for THREE.Euler which does use underscored properties\n\t\t\t\t\t// in \u00BBcopy\u00AB method\n\t\t\t\t\tif ('setFromVector3' in object[prop]) {\n\t\t\t\t\t\tconst toVector3 = new THREE.Vector3();\n\t\t\t\t\t\ttoVector3.setFromEuler(object[prop]);\n\t\t\t\t\t\tconst mergedVector3 = { ...toVector3, ...options[prop] };\n\n\t\t\t\t\t\tobject[prop].setFromVector3(mergedVector3);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst v = { ...object[prop], ...options[prop] };\n\n\t\t\t\t\tobject[prop].copy(v);\n\t\t\t\t} else {\n\t\t\t\t\tif (prop === 'userData') {\n\t\t\t\t\t\tUserData.handle(object, options[prop]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tobject[prop] = applyProperties(object[prop], options[prop]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (Utils.isThreeColorValue(prop)) {\n\t\t\t\t\tobject[prop] = new THREE.Color(options[prop]);\n\t\t\t\t} else {\n\t\t\t\t\tobject[prop] = options[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\treturn {\n\n\t\tadd,\n\t\tcreate,\n\t\tchange\n\n\t};\n})(App);\n\nexport { Object3d };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\n\nconst Scene = (function () {\n\tfunction init () {\n\t\tconst options = App.options;\n\n\t\tApp.camera = initCamera(options.camera);\n\t\tApp.scene = initScene(options.scene);\n\n\t\tApp.initSize();\n\t}\n\n\tfunction initScene (options) {\n\t\tconst scene = Object3d.create(options);\n\n\t\t(async () => {\n\t\t\tscene.background = await createSceneTextures(options.background);\n\n\t\t\tscene.environment = await createSceneTextures(options.environment);\n\t\t})();\n\n\t\treturn scene;\n\t}\n\n\tfunction initCamera (options) {\n\t\tconst camera = Object3d.create(options);\n\n\t\tcamera.updateProjectionMatrix();\n\n\t\treturn camera;\n\t}\n\n\tasync function createSceneTextures (options) {\n\t\tif (!options) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst THREE = App.THREE;\n\n\t\tconst loaderType = options.loader || 'TextureLoader';\n\t\tconst loader = new THREE[loaderType](App.manager);\n\t\tconst texture = await loader.loadAsync(options.url);\n\n\t\treturn texture;\n\t}\n\n\treturn {\n\n\t\tinit\n\n\t};\n})(App);\n\nexport { Scene };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\n\nconst Controls = (function () {\n\tfunction init (Controls, options) {\n\t\tApp.controls[Controls.name] = initControls(Controls, options);\n\t}\n\n\tfunction initControls (Controls, options) {\n\t\tlet controls = new Controls(App.camera, App.renderer.domElement);\n\t\tcontrols = Object3d.change(controls, options);\n\n\t\treturn controls;\n\t}\n\n\treturn {\n\n\t\tinit\n\n\t};\n})(App);\n\nexport { Controls };\n", "import { App } from './app';\n\nconst Loaders = (function () {\n\tconst Loaders = {};\n\n\tfunction init (LoaderClass) {\n\t\tLoaders[LoaderClass.name] = new LoaderClass(App.manager);\n\t}\n\n\tasync function load (options) {\n\t\tconst item = await Loaders[options.loader].loadAsync(options.url);\n\n\t\treturn item;\n\t}\n\n\treturn {\n\n\t\tinit,\n\t\tload\n\n\t};\n})(App);\n\nexport { Loaders };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\n\nconst Light = (function () {\n\tfunction create (options) {\n\t\tconst light = Object3d.create(options);\n\n\t\treturn light;\n\t}\n\n\tfunction change (light, options) {\n\t\tlight = Object3d.change(light, options);\n\n\t\treturn light;\n\t}\n\n\tfunction add (options) {\n\t\tif (typeof options === 'object' && options.type) {\n\t\t\treturn addOne(options);\n\t\t}\n\n\t\tconst lights = [];\n\n\t\tif (Array.isArray(options)) {\n\t\t\toptions.forEach(option => {\n\t\t\t\tconst light = addOne(option);\n\n\t\t\t\tlights.push(light);\n\t\t\t});\n\t\t}\n\n\t\treturn lights;\n\t}\n\n\tfunction addOne (options) {\n\t\tconst light = create(options);\n\n\t\tApp.scene.add(light);\n\n\t\treturn light;\n\t}\n\n\treturn {\n\n\t\tadd,\n\t\tcreate,\n\t\tchange\n\n\t};\n})(App);\n\nexport { Light };\n", "import { App } from './app';\nimport { Utils } from '../utils';\n\nconst Material = (function () {\n\tfunction create (options) {\n\t\tif (!options) {\n\t\t\toptions = {\n\n\t\t\t\ttype: 'MeshPhongMaterial',\n\t\t\t\targs: [{ color: 0xffffff }]\n\n\t\t\t};\n\n\t\t\tApp.info('No options for material given, using default MeshPhongMaterial in white');\n\t\t}\n\n\t\tlet material = App.create(options);\n\n\t\tmaterial = change(material, options);\n\n\t\treturn material;\n\t}\n\n\tfunction change (object, options) {\n\t\tconst THREE = App.THREE;\n\n\t\tif (options.properties) {\n\t\t\tobject = applyProperties(object, options.properties);\n\t\t}\n\n\t\tif (options.methods) {\n\t\t\tobject = Utils.applyMethods(object, options.methods);\n\t\t}\n\n\t\tif (options.textures) {\n\t\t\toptions.textures.forEach(async texture => {\n\t\t\t\tconst loaderType = texture.loader || 'TextureLoader';\n\t\t\t\tconst loader = new THREE[loaderType](App.manager);\n\t\t\t\tconst mapType = texture.map;\n\t\t\t\tconst mapTexture = await loader.loadAsync(texture.url);\n\n\t\t\t\tobject[mapType] = mapTexture;\n\n\t\t\t\tif (texture.properties) {\n\t\t\t\t\tobject[mapType] = applyProperties(object[mapType], texture.properties);\n\t\t\t\t}\n\n\t\t\t\tif (texture.methods) {\n\t\t\t\t\tobject[mapType] = Utils.applyMethods(object, texture.methods);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tobject.needsUpdate = true;\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tfunction applyProperties (object, options) {\n\t\tconst THREE = App.THREE;\n\n\t\tif (!options || typeof options !== 'object') {\n\t\t\treturn object;\n\t\t}\n\n\t\tfor (const prop in options) {\n\t\t\tif (options[prop] instanceof Object) {\n\t\t\t\tobject[prop] = { ...options[prop] };\n\t\t\t} else {\n\t\t\t\tif (Utils.isThreeColorValue(prop)) {\n\t\t\t\t\tobject[prop] = new THREE.Color(options[prop]);\n\t\t\t\t} else {\n\t\t\t\t\tobject[prop] = options[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn object;\n\t}\n\n\treturn {\n\n\t\tcreate,\n\t\tchange\n\n\t};\n})(App);\n\nexport { Material };\n", "import { App } from './app';\nimport { Utils } from '../utils';\n\nconst Geometry = (function () {\n\tfunction create (options) {\n\t\tif (!options) {\n\t\t\toptions = {\n\n\t\t\t\ttype: 'BoxGeometry',\n\t\t\t\targs: [1, 1, 1]\n\n\t\t\t};\n\n\t\t\tApp.info('No options for geometry given, using default BoxGeometry 1x1x1');\n\t\t}\n\n\t\tlet geometry = App.create(options);\n\n\t\tgeometry = Utils.merge(geometry, options.properties);\n\n\t\treturn geometry;\n\t}\n\n\treturn {\n\n\t\tcreate\n\n\t};\n})(App);\n\nexport { Geometry };\n", "import { App } from './app';\nimport { Object3d } from './object3d';\nimport { Material } from './material';\nimport { Geometry } from './geometry';\nimport { Loaders } from './loaders';\n\nconst Item = (function () {\n\tfunction create (options) {\n\t\tconst THREE = App.THREE;\n\n\t\tconst material = Material.create(options.material);\n\t\tconst geometry = Geometry.create(options.geometry);\n\n\t\tlet mesh = new THREE.Mesh(geometry, material);\n\t\tmesh = change(mesh, options);\n\n\t\treturn mesh;\n\t}\n\n\tfunction add (options) {\n\t\tif (typeof options === 'object') {\n\t\t\tif (options.loader) {\n\t\t\t\treturn addFromLoader(options);\n\t\t\t}\n\n\t\t\tif (options.geometry) {\n\t\t\t\treturn addMesh(options);\n\t\t\t}\n\t\t}\n\n\t\tconst items = [];\n\n\t\tif (Array.isArray(options)) {\n\t\t\toptions.forEach(option => {\n\t\t\t\tconst item = add(option);\n\n\t\t\t\titems.push(item);\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tasync function addFromLoader (options) {\n\t\tlet item = await Loaders.load(options);\n\n\t\tif (item.scene) {\n\t\t\tlet parent = wrapGroupParent(item.scene, options);\n\n\t\t\tparent = change(parent, options);\n\n\t\t\tparent.receiveShadow = false;\n\t\t\tparent.castShadow = false;\n\n\t\t\tApp.scene.add(parent);\n\n\t\t\treturn parent;\n\t\t} else {\n\t\t\titem = change(item, options);\n\n\t\t\tApp.scene.add(item);\n\n\t\t\treturn item;\n\t\t}\n\t}\n\n\tfunction wrapGroupParent (item, options) {\n\t\tconst THREE = App.THREE;\n\n\t\tconst box = new THREE.Box3().setFromObject(item);\n\n\t\tconst center = box.getCenter(new THREE.Vector3());\n\n\t\tconst offset = 0.001; // when clipping effects occur set this to 0.001\n\n\t\tconst dim = {\n\t\t\tx: box.max.x - box.min.x + offset,\n\t\t\ty: box.max.y - box.min.y + offset,\n\t\t\tz: box.max.z - box.min.z + offset\n\t\t};\n\n\t\tconst geo = new THREE.BoxGeometry(dim.x, dim.y, dim.z);\n\n\t\tif (!options.material) {\n\t\t\toptions.material = {\n\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\ttransparent: true,\n\t\t\t\topacity: 0\n\n\t\t\t};\n\t\t}\n\n\t\tconst mat = new THREE.MeshBasicMaterial(options.material);\n\t\tconst mesh = new THREE.Mesh(geo, mat);\n\n\t\tmesh.position.y = (dim.y / 2);\n\t\titem.position.x += (item.position.x - center.x);\n\t\titem.position.y += (item.position.y - center.y);\n\t\titem.position.z += (item.position.z - center.z);\n\n\t\tmesh.renderOrder = 1;\n\n\t\titem.traverse(child => {\n\t\t\tif (child.isMesh) {\n\t\t\t\tchild.receiveShadow = options.properties.receiveShadow || false;\n\t\t\t\tchild.castShadow = options.properties.castShadow || false;\n\t\t\t\tchild.material.side = THREE.DoubleSide;\n\t\t\t}\n\t\t});\n\n\t\tmesh.add(item);\n\n\t\treturn mesh;\n\t}\n\n\tfunction addMesh (options) {\n\t\tconst mesh = create(options);\n\n\t\tApp.scene.add(mesh);\n\n\t\treturn mesh;\n\t}\n\n\tfunction change (object, options) {\n\t\tobject = Object3d.change(object, options);\n\n\t\tif (options.material) {\n\t\t\tMaterial.change(object.material, options.material);\n\t\t}\n\n\t\treturn object;\n\t}\n\n\tfunction remove (object) {\n\t\tApp.collidables = App.collidables.filter(item => item !== object);\n\t\tApp.draggables = App.draggables.filter(item => item !== object);\n\n\t\tApp.scene.remove(object);\n\t}\n\n\treturn {\n\n\t\tadd,\n\t\tcreate,\n\t\tchange,\n\t\tremove\n\n\t};\n})(App);\n\nexport { Item };\n", "import { App } from './app';\nimport { Material } from './material';\n\nconst Dragging = (function () {\n\tlet tmpMaterial = null;\n\tlet plane = null;\n\tlet planeNormal = null;\n\tlet pointIntersect = null;\n\tlet distance = null;\n\n\tfunction init () {\n\t\tconst THREE = App.THREE;\n\t\tplane = new THREE.Plane();\n\t\tplaneNormal = new THREE.Vector3(0, 1, 0);\n\t\tpointIntersect = new THREE.Vector3();\n\t\tdistance = new THREE.Vector3();\n\t}\n\n\tfunction start (object = null, intersects = null) {\n\t\tconst THREE = App.THREE;\n\n\t\tintersects = intersects ?? (object\n\t\t\t? App.raycaster.intersectObject(object)\n\t\t\t: App.raycaster.intersectObjects(App.draggables));\n\n\t\tif (intersects.length <= 0) return;\n\n\t\tApp.draggableObject = object ?? intersects[0].object;\n\n\t\tpointIntersect.copy(intersects[0].point);\n\n\t\tplane.setFromNormalAndCoplanarPoint(planeNormal, pointIntersect);\n\n\t\tdistance.subVectors(App.draggableObject.position, intersects[0].point);\n\n\t\t// create boundingBox and size for later use\n\t\tconst bBox = new THREE.Box3().setFromObject(App.draggableObject);\n\t\tconst size = new THREE.Vector3();\n\t\tbBox.getSize(size);\n\n\t\tApp.draggableObject.userData.tmp = {\n\t\t\tbbox: bBox,\n\t\t\tsize\n\t\t};\n\n\t\tApp.controls.OrbitControls.enabled = false;\n\t\tApp.actions.isDragging = true;\n\t\tApp.canvas.style.cursor = 'grab';\n\n\t\t// onDragStart callback\n\t\tlet onDragStartCallback = App.draggableObject.userData?.callbacks?.onDragStart ?? (() => {});\n\n\t\t// create a function if it is a string\n\t\tif (typeof App.draggableObject.userData?.callbacks?.onDragStart === 'string') {\n\t\t\t/* eslint-disable no-new-func */\n\t\t\tonDragStartCallback = new Function('return ' + App.draggableObject.userData.callbacks.onDragStart)();\n\t\t\t/* eslint-enable no-new-func */\n\t\t}\n\n\t\tonDragStartCallback(App);\n\n\t\tif (App.draggableObject.userData.dragMaterial) {\n\t\t\ttmpMaterial = App.draggableObject.material;\n\n\t\t\tApp.draggableObject.material = Material.create(App.draggableObject.userData.dragMaterial);\n\t\t}\n\t}\n\n\tfunction stop () {\n\t\tApp.controls.OrbitControls.enabled = true;\n\t\tApp.actions.isDragging = false;\n\t\tApp.canvas.style.cursor = 'auto';\n\n\t\tif (App.draggableObject) {\n\t\t\t// onDragStop callback\n\t\t\tlet onDragStopCallback = App.draggableObject.userData?.callbacks?.onDragStop ?? (() => {});\n\n\t\t\t// create function if it is a converted function string\n\t\t\tif (typeof App.draggableObject.userData?.callbacks?.onDragStop === 'string') {\n\t\t\t/* eslint-disable no-new-func */\n\t\t\t\tonDragStopCallback = new Function('return ' + App.draggableObject.userData.callbacks.onDragStop)();\n\t\t\t/* eslint-enable no-new-func */\n\t\t\t}\n\n\t\t\tonDragStopCallback(App);\n\t\t}\n\n\t\tif (App.draggableObject && App.draggableObject.userData.dragMaterial) {\n\t\t\tApp.draggableObject.material = tmpMaterial;\n\n\t\t\ttmpMaterial = null;\n\t\t}\n\n\t\tApp.draggableObject = null;\n\t}\n\n\tfunction drag() {\n\t\tconst THREE = App.THREE;\n\t\tif (!App.actions.isDragging) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update the intersection point\n\t\tApp.raycaster.ray.intersectPlane(plane, pointIntersect);\n\n\t\t// Calculate the intended new position\n\t\tconst newPosition = new THREE.Vector3().addVectors(pointIntersect, distance);\n\t\tApp.draggableObject.position.copy(newPosition);\n\n\t\t// Update the world matrix to reflect the new position\n\t\tApp.draggableObject.updateMatrixWorld(true);\n\n\t\tif (App.movingLimits !== null) {\n\t\t\tconst size = App.draggableObject.userData.tmp.size;\n\n\t\t\t// Get the current world position after the initial move\n\t\t\tconst worldPosition = new THREE.Vector3();\n\t\t\tApp.draggableObject.getWorldPosition(worldPosition);\n\n\t\t\t// Apply limits in world space\n\t\t\tconst isOutOfBounds =\n\t\t\t\tworldPosition.x < (App.movingLimits.min.x + size.x / 2) ||\n\t\t\t\tworldPosition.x > (App.movingLimits.max.x - size.x / 2) ||\n\t\t\t\tworldPosition.z < (App.movingLimits.min.z + size.z / 2) ||\n\t\t\t\tworldPosition.z > (App.movingLimits.max.z - size.z / 2);\n\n\t\t\tif (isOutOfBounds) {\n\t\t\t\t// Clamp the world position\n\t\t\t\tworldPosition.x = Math.max(\n\t\t\t\t\tApp.movingLimits.min.x + size.x / 2,\n\t\t\t\t\tMath.min(App.movingLimits.max.x - size.x / 2, worldPosition.x),\n\t\t\t\t);\n\t\t\t\tworldPosition.z = Math.max(\n\t\t\t\t\tApp.movingLimits.min.z + size.z / 2,\n\t\t\t\t\tMath.min(App.movingLimits.max.z - size.z / 2, worldPosition.z)\n\t\t\t\t);\n\n\t\t\t\t// Convert world position to local position\n\t\t\t\t// This automatically handles any nested groups\n\t\t\t\tconst localPosition = App.draggableObject.parent.worldToLocal(worldPosition.clone());\n\n\t\t\t\t// Apply the corrected position\n\t\t\t\tApp.draggableObject.position.copy(localPosition);\n\t\t\t}\n\t\t}\n\n\t\t// onDrag callback\n\t\tlet onDragCallback = App.draggableObject.userData?.callbacks?.onDrag ?? (() => {});\n\t\tif (typeof App.draggableObject.userData?.callbacks?.onDrag === 'string') {\n\t\t\t/* eslint-disable no-new-func */\n\t\t\tonDragCallback = new Function('return ' + App.draggableObject.userData.callbacks.onDrag)();\n\t\t\t/* eslint-enable no-new-func */\n\t\t}\n\n\t\tonDragCallback(App);\n\t};\n\n\treturn {\n\t\tinit,\n\t\tstart,\n\t\tdrag,\n\t\tstop\n\t};\n})();\n\nexport { Dragging };\n", "import { App } from './app';\nimport { Dragging } from './dragging';\n\nconst Events = (function () {\n\tasync function init () {\n\t\tconst THREE = App.THREE;\n\n\t\tApp.raycaster = App.raycaster ?? new THREE.Raycaster();\n\t\tApp.mouse = App.mouse ?? {};\n\n\t\tDragging.init(App.draggables);\n\n\t\tconst element = await App.renderer.domElement;\n\n\t\telement.addEventListener('mousemove', event => {\n\t\t\tonMouseMove(event);\n\t\t});\n\n\t\telement.addEventListener('mousedown', event => {\n\t\t\tonMouseDown(event);\n\t\t});\n\n\t\telement.addEventListener('mouseup', event => {\n\t\t\tonMouseUp(event);\n\t\t});\n\t}\n\n\tfunction onMouseDown (event) {\n\t\tDragging.start();\n\t}\n\n\tfunction onMouseUp () {\n\t\tDragging.stop();\n\t}\n\n\tfunction onMouseMove (event) {\n\t\tconst rect = App.canvas.getBoundingClientRect();\n\n\t\tApp.mouse.x = ((event.clientX - rect.left) / (rect.right - rect.left)) * 2 - 1;\n\t\tApp.mouse.y = -((event.clientY - rect.top) / (rect.bottom - rect.top)) * 2 + 1;\n\n\t\tApp.raycaster.setFromCamera(App.mouse, App.camera);\n\n\t\tDragging.drag();\n\t}\n\n\treturn {\n\t\tinit\n\t};\n})();\n\nexport { Events };\n", "import { App } from './app';\n\nconst Collision = (function () {\n\tconst currentCollisions = [];\n\n\tfunction check (object, onlyVisible = true) {\n\t\tconst THREE = App.THREE;\n\n\t\tlet collision = false;\n\n\t\tconst objectBox = new THREE.Box3().setFromObject(object);\n\n\t\tcurrentCollisions.length = 0;\n\n\t\tApp.collidables.forEach(collidable => {\n\t\t\tif (collidable === object) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (onlyVisible && !collidable.visible) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst collidableBox = new THREE.Box3().setFromObject(collidable);\n\n\t\t\tif (objectBox.intersectsBox(collidableBox)) {\n\t\t\t\tcurrentCollisions.push(collidable);\n\t\t\t\tcollision = true;\n\t\t\t}\n\t\t});\n\n\t\treturn collision;\n\t}\n\n\tfunction getCurrentCollisions () {\n\t\treturn currentCollisions;\n\t}\n\n\treturn {\n\n\t\tcheck,\n\t\tgetCurrentCollisions\n\n\t};\n})(App);\n\nexport { Collision };\n", "import { KLEEVERSION } from './modules/constants';\n\nconsole.log('klee.js: ' + KLEEVERSION);\n\nexport * from './modules/constants';\nexport { App } from './modules/app';\nexport { Object3d } from './modules/object3d';\nexport { Scene } from './modules/scene';\nexport { Controls } from './modules/controls';\nexport { Loaders } from './modules/loaders';\nexport { Light } from './modules/light';\nexport { Item } from './modules/item';\nexport { Geometry } from './modules/geometry';\nexport { Material } from './modules/material';\nexport { Events } from './modules/events';\nexport { Dragging } from './modules/dragging';\nexport { Collision } from './modules/collisions';\nexport { UserData } from './modules/userdata';\n"],
  "mappings": "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",
  "names": ["KLEEVERSION", "getDefaultOptions", "THREE", "Utils", "target", "source", "key", "string", "object", "methods", "method", "args", "App", "options", "THREE", "local", "init", "three", "initOptions", "error", "warn", "Utils", "getDefaultOptions", "initRenderer", "run", "callback", "initSize", "isResponsive", "initialFov", "initialWidth", "width", "height", "entry", "wWidth", "o", "renderer", "createObject", "applyRendererOptions", "args", "logMessage", "message", "type", "level", "log", "info", "object", "collidables", "draggables", "faceables", "mouseVector2", "minMaxLimits", "raycaster", "UserData", "handle", "object", "userData", "f", "action", "addCollidables", "addDraggables", "addFaceable", "setMovingLimits", "THREE", "App", "boundingBox", "Object3d", "add", "options", "object3d", "create", "App", "THREE", "args", "object", "change", "applyProperties", "Utils", "prop", "toVector3", "mergedVector3", "v", "UserData", "Scene", "init", "options", "App", "initCamera", "initScene", "scene", "Object3d", "createSceneTextures", "camera", "THREE", "loaderType", "Controls", "init", "options", "App", "initControls", "controls", "Object3d", "Loaders", "init", "LoaderClass", "App", "load", "options", "Light", "create", "options", "Object3d", "change", "light", "add", "addOne", "lights", "option", "App", "Material", "create", "options", "App", "material", "change", "object", "THREE", "applyProperties", "Utils", "texture", "loaderType", "loader", "mapType", "mapTexture", "prop", "Geometry", "create", "options", "App", "geometry", "Utils", "Item", "create", "options", "THREE", "App", "material", "Material", "geometry", "Geometry", "mesh", "change", "add", "addFromLoader", "addMesh", "items", "option", "item", "Loaders", "parent", "wrapGroupParent", "box", "center", "offset", "dim", "geo", "mat", "child", "object", "Object3d", "remove", "Dragging", "tmpMaterial", "plane", "planeNormal", "pointIntersect", "distance", "init", "THREE", "App", "start", "object", "intersects", "bBox", "size", "onDragStartCallback", "Material", "stop", "onDragStopCallback", "drag", "newPosition", "worldPosition", "localPosition", "onDragCallback", "Events", "init", "THREE", "App", "Dragging", "element", "event", "onMouseMove", "onMouseDown", "onMouseUp", "rect", "Collision", "currentCollisions", "check", "object", "onlyVisible", "THREE", "App", "collision", "objectBox", "collidable", "collidableBox", "getCurrentCollisions", "KLEEVERSION"]
}
